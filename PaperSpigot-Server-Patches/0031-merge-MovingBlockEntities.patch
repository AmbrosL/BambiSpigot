From ee43c597591a5958b53d4edb84c747a9f0ae25d3 Mon Sep 17 00:00:00 2001
From: AmbrosL <AmbrosL@users.noreply.github.com>
Date: Sun, 17 Jun 2018 14:23:04 +0200
Subject: [PATCH] merge MovingBlockEntities


diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index c4bfd5fe..f4529469 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -2287,4 +2287,8 @@ public abstract class Entity implements ICommandListener {
 
         EnchantmentManager.b(entityliving, entity);
     }
+
+    public boolean ignore() { // SulphurSpigot - merge MovingBlockEntities
+        return false;
+    }
 }
diff --git a/src/main/java/net/minecraft/server/EntityFallingBlock.java b/src/main/java/net/minecraft/server/EntityFallingBlock.java
index 5be17edb..b7e3820f 100644
--- a/src/main/java/net/minecraft/server/EntityFallingBlock.java
+++ b/src/main/java/net/minecraft/server/EntityFallingBlock.java
@@ -17,6 +17,11 @@ public class EntityFallingBlock extends EntityMovingBlock {
     private float fallHurtAmount = 2.0F;
     public NBTTagCompound tileEntityData;
 
+    // SulphurSpigot start - merge MovingBlockEntities
+    private EntityFallingBlock nextFallingBlocktoMerge;
+    private static EntityFallingBlock lastFallingBlock;
+    // SulphurSpigot end - merge MovingBlockEntities
+
     // PaperSpigot start - Add FallingBlock source location API
     public EntityFallingBlock(World world, double d0, double d1, double d2, IBlockData iblockdata) {
         this(null, world, d0, d1, d2, iblockdata);
@@ -41,9 +46,11 @@ public class EntityFallingBlock extends EntityMovingBlock {
     public void t_() {
         Block block = this.block.getBlock();
 
+        if(this.nextFallingBlocktoMerge != null) this.nextFallingBlocktoMerge.merge(this); // SulphurSpigot - merge MovingBlockEntities
+
         if (block.getMaterial() == Material.AIR) {
             this.die();
-        } else {
+        } else if(!this.ignore()) { // SulphurSpigot - merge MovingBlockEntities
             this.lastX = this.locX;
             this.lastY = this.locY;
             this.lastZ = this.locZ;
@@ -137,8 +144,16 @@ public class EntityFallingBlock extends EntityMovingBlock {
                     this.die();
                 }
             }
+            if(EntityFallingBlock.lastFallingBlock != null && this.isMergeable(EntityFallingBlock.lastFallingBlock)) { // SulphurSpigot - merge MovingBlockEntities
+                EntityFallingBlock.lastFallingBlock.nextFallingBlocktoMerge = this;
+                this.ignore = true;
+            }
 
+        } else {
+            this.ticksLived++;
         }
+
+        if(this.world.tacoSpigotConfig.mergeMovingBlockEntities) EntityFallingBlock.lastFallingBlock = this; // SulphurSpigot - merge MovingBlockEntities
     }
 
     public void e(float f, float f1) {
@@ -261,4 +276,16 @@ public class EntityFallingBlock extends EntityMovingBlock {
         return this.block;
     }
 
+    // SulphurSpigot start - merge MovingBlockEntities
+    @Override
+    public  void die() {
+        if(this.nextFallingBlocktoMerge != null) this.nextFallingBlocktoMerge.ignore = false;
+        super.die();
+    }
+
+    public static void tick() {
+        EntityFallingBlock.lastFallingBlock = null;
+    }
+    // SulphurSpigot end - merge MovingBlockEntities
+
 }
diff --git a/src/main/java/net/minecraft/server/EntityMovingBlock.java b/src/main/java/net/minecraft/server/EntityMovingBlock.java
index 9a9db9a7..8cc207f2 100644
--- a/src/main/java/net/minecraft/server/EntityMovingBlock.java
+++ b/src/main/java/net/minecraft/server/EntityMovingBlock.java
@@ -5,6 +5,7 @@ import org.bukkit.Location;
 public abstract class EntityMovingBlock extends Entity { // SulphurSpigot
 
     public Location sourceLoc;
+    protected boolean ignore = false;
 
     public EntityMovingBlock(Location loc, World world, double d0, double d1, double d2) {
         super(world);
@@ -18,6 +19,8 @@ public abstract class EntityMovingBlock extends Entity { // SulphurSpigot
         this.lastZ = d2;
     }
 
+
+
     // SulphurSpigot start - always fix cannons
     @Override
     public double f(double d0, double d1, double d2) {
@@ -34,4 +37,40 @@ public abstract class EntityMovingBlock extends Entity { // SulphurSpigot
         return this.length / 2;
     }
     // SulphurSpigot end
+
+    // SulphurSpigot start - merge MovingBlockEntities
+    @Override
+    public boolean ignore() {
+        return this.ignore && this.world.tacoSpigotConfig.mergeMovingBlockEntities;
+    }
+
+    protected boolean isMergeable(EntityMovingBlock entity) {
+        if(!this.world.tacoSpigotConfig.mergeMovingBlockEntities) return false;
+        if(entity.getId() +1 != this.getId()) return false;
+        if(this.dead || entity.dead) return false;
+        if(entity.world != this.world) return false;
+
+        if(entity.locX != this.locX || entity.locY != this.locY || entity.locZ != this.locZ) return false;
+
+        if(entity.motX != this.motX || entity.motY != this.motY || entity.motZ != this.motZ) return false;
+
+        return true;
+    }
+
+    protected void merge(EntityMovingBlock entity) {
+        this.setPosition(entity.locX, entity.locY, entity.locZ);
+
+        this.lastX = entity.lastX;
+        this.lastY = entity.lastY;
+        this.lastZ = entity.lastZ;
+
+        this.motX = entity.motX;
+        this.motY = entity.motY;
+        this.motZ = entity.motZ;
+
+        this.onGround = entity.onGround;
+    }
+
+    // SulphurSpigot end - merge MovingBlockEntities
+
 }
diff --git a/src/main/java/net/minecraft/server/EntityTNTPrimed.java b/src/main/java/net/minecraft/server/EntityTNTPrimed.java
index 6135429a..d751e585 100644
--- a/src/main/java/net/minecraft/server/EntityTNTPrimed.java
+++ b/src/main/java/net/minecraft/server/EntityTNTPrimed.java
@@ -9,6 +9,11 @@ public class EntityTNTPrimed extends EntityMovingBlock {
     public float yield = 4; // CraftBukkit - add field
     public boolean isIncendiary = false; // CraftBukkit - add field
 
+    // SulphurSpigot start - merge MovingBlockEntities
+    private EntityTNTPrimed nextTNTPrimedtoMerge;
+    private static EntityTNTPrimed lastTNTPrimed;
+    // SulphurSpigot end - merge MovingBlockEntities
+
     // PaperSpigot start - TNT source location API
     public EntityTNTPrimed(org.bukkit.Location loc, World world, double d0, double d1, double d2, EntityLiving entityliving) {
         super(loc, world, d0, d1, d2);
@@ -29,48 +34,63 @@ public class EntityTNTPrimed extends EntityMovingBlock {
     }
 
     public void t_() {
-        if (world.spigotConfig.currentPrimedTnt++ > world.spigotConfig.maxTntTicksPerTick) { return; } // Spigot
-        this.lastX = this.locX;
-        this.lastY = this.locY;
-        this.lastZ = this.locZ;
-        this.motY -= 0.03999999910593033D;
-        this.move(this.motX, this.motY, this.motZ);
-
-        // PaperSpigot start - Drop TNT entities above the specified height
-        if (this.world.paperSpigotConfig.tntEntityHeightNerf != 0 && this.locY > this.world.paperSpigotConfig.tntEntityHeightNerf) {
-            this.die();
-        }
-        // PaperSpigot end
+        if(nextTNTPrimedtoMerge != null) nextTNTPrimedtoMerge.merge(this); // SulphurSpigot - merge MovingBlockEntities
+        if(!this.ignore()){
+            if (world.spigotConfig.currentPrimedTnt++ > world.spigotConfig.maxTntTicksPerTick) {
+                return;
+            } // Spigot
+            this.lastX = this.locX;
+            this.lastY = this.locY;
+            this.lastZ = this.locZ;
+            this.motY -= 0.03999999910593033D;
+            this.move(this.motX, this.motY, this.motZ);
+
+            // PaperSpigot start - Drop TNT entities above the specified height
+            if (this.world.paperSpigotConfig.tntEntityHeightNerf != 0 && this.locY > this.world.paperSpigotConfig.tntEntityHeightNerf) {
+                this.die();
+            }
+            // PaperSpigot end
 
-        // PaperSpigot start - Remove entities in unloaded chunks
-        if (this.inUnloadedChunk && world.paperSpigotConfig.removeUnloadedTNTEntities) {
-            this.die();
-            this.fuseTicks = 2;
-        }
-        // PaperSpigot end
+            // PaperSpigot start - Remove entities in unloaded chunks
+            if (this.inUnloadedChunk && world.paperSpigotConfig.removeUnloadedTNTEntities) {
+                this.die();
+                this.fuseTicks = 2;
+            }
+            // PaperSpigot end
+
+            this.motX *= 0.9800000190734863D;
+            this.motY *= 0.9800000190734863D;
+            this.motZ *= 0.9800000190734863D;
+            if (this.onGround) {
+                this.motX *= 0.699999988079071D;
+                this.motZ *= 0.699999988079071D;
+                this.motY *= -0.5D;
+            }
 
-        this.motX *= 0.9800000190734863D;
-        this.motY *= 0.9800000190734863D;
-        this.motZ *= 0.9800000190734863D;
-        if (this.onGround) {
-            this.motX *= 0.699999988079071D;
-            this.motZ *= 0.699999988079071D;
-            this.motY *= -0.5D;
-        }
+            if (this.fuseTicks-- <= 0) {
+                // CraftBukkit start - Need to reverse the order of the explosion and the entity death so we have a location for the event
+                // this.die();
+                if (!this.world.isClientSide) {
+                    if(nextTNTPrimedtoMerge != null) nextTNTPrimedtoMerge.ignore = false;
+                    this.explode();
+                }
+                this.die();
+                // CraftBukkit end
+            } else {
+                this.W();
+                this.world.addParticle(EnumParticle.SMOKE_NORMAL, this.locX, this.locY + 0.5D, this.locZ, 0.0D, 0.0D, 0.0D, new int[0]);
+            }
 
-        if (this.fuseTicks-- <= 0) {
-            // CraftBukkit start - Need to reverse the order of the explosion and the entity death so we have a location for the event
-            // this.die();
-            if (!this.world.isClientSide) {
-                this.explode();
+            if(EntityTNTPrimed.lastTNTPrimed != null && this.isMergeable(EntityTNTPrimed.lastTNTPrimed)) { // SulphurSpigot - merge MovingBlockEntities
+                EntityTNTPrimed.lastTNTPrimed.nextTNTPrimedtoMerge = this;
+                this.ignore = true;
             }
-            this.die();
-            // CraftBukkit end
         } else {
-            this.W();
-            this.world.addParticle(EnumParticle.SMOKE_NORMAL, this.locX, this.locY + 0.5D, this.locZ, 0.0D, 0.0D, 0.0D, new int[0]);
+            this.fuseTicks--;
         }
 
+        if(this.world.tacoSpigotConfig.mergeMovingBlockEntities) EntityTNTPrimed.lastTNTPrimed = this; // SulphurSpigot - merge MovingBlockEntities
+
     }
 
     private void explode() {
@@ -166,5 +186,16 @@ public class EntityTNTPrimed extends EntityMovingBlock {
 
         return this.inWater;
     }
-    // SulphurSpigot end
+
+    // SulphurSpigot start - merge MovingBlockEntities
+    @Override
+    public void die() {
+        if(this.nextTNTPrimedtoMerge != null) this.nextTNTPrimedtoMerge.ignore = false;
+        super.die();
+    }
+
+    public static void tick() {
+        EntityTNTPrimed.lastTNTPrimed = null;
+    }
+    // SulphurSpigot end - merge MovingBlockEntities
 }
diff --git a/src/main/java/net/minecraft/server/Explosion.java b/src/main/java/net/minecraft/server/Explosion.java
index 3349d803..635fb39d 100644
--- a/src/main/java/net/minecraft/server/Explosion.java
+++ b/src/main/java/net/minecraft/server/Explosion.java
@@ -111,7 +111,7 @@ public class Explosion {
         List list = this.world.a(this.source, new AxisAlignedBB((double) i, (double) l, (double) j1, (double) j, (double) i1, (double) k1), new com.google.common.base.Predicate<Entity>() {
             @Override
             public boolean apply(Entity entity) {
-                return IEntitySelector.d.apply(entity) && !entity.dead;
+                return IEntitySelector.d.apply(entity) && !entity.dead && !entity.ignore(); // SulphurSpigot - merge MovingBlockEntities
             }
         });
         // PaperSpigot end
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 5a1a8901..e14b098c 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -1371,6 +1371,11 @@ public abstract class World implements IBlockAccess {
         CrashReport crashreport;
         CrashReportSystemDetails crashreportsystemdetails;
 
+        // SulphurSpigot start - merge MovingBlockEntities
+        EntityTNTPrimed.tick();
+        EntityFallingBlock.tick();
+        // SulphurSpigot end - merge MovingBlockEntities
+
         for (i = 0; i < this.k.size(); ++i) {
             entity = (Entity) this.k.get(i);
             // CraftBukkit start - Fixed an NPE
diff --git a/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java b/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java
index 8c1f1a75..272a20a1 100644
--- a/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java
+++ b/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java
@@ -110,4 +110,9 @@ public class TacoSpigotWorldConfig {
 
     public boolean disableFallingBlockStackingAt256;
     private void DisableFallingBlockStackingAt256() { disableFallingBlockStackingAt256 = getBoolean("disable-falling-block-stacking-at-256", false);}
+
+    public boolean mergeMovingBlockEntities;
+    private void mergeMovingBlockEntities() {
+        mergeMovingBlockEntities = getBoolean("merge-MovingBlockEntities", false);
+    }
 }
-- 
2.17.1.windows.2

